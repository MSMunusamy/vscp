# =========================================================================
#                      Autogenerated from Makefile.in         
# =========================================================================

# STATIC = yes if a static build is requested.
STATIC=@STATIC@

prefix = @prefix@
exec_prefix = @exec_prefix@
INSTALL = @INSTALL@
top_srcdir = @top_srcdir@
top_wxsrcdir = @top_wxsrcdir@
top_builddir = @top_builddir@
top_wxbuilddir = @top_wxbuilddir@

CC = @CC@
CXX = @CXX@

# wxBase flags and libs
WXBASE_CPPFLAGS = @WXBASE_CPPFLAGS@
WXBASE_CXXFLAGS = @WXBASE_CXXFLAGS@
WXBASE_CFLAGS = @WXBASE_CFLAGS@
WXBASE_LIBS = @WXBASE_LIBS@
WXBASE_STATIC_LIBS = @WXBASE_STATIC_LIBS@

# wxGTK flags and libs
WXGTK_CPPFLAGS = @WXGTK_CPPFLAGS@
WXGTK_CXXFLAGS = @WXGTK_CXXFLAGS@
WXGTK_CFLAGS = @WXGTK_CFLAGS@
WXGTK_LIBS = @WXGTK_LIBS@
WXGTK_STATIC_LIBS = @WXGTK_STATIC_LIBS@

MONGOOSE_CFLAGS = -DMG_ENABLE_THREADS -DMG_ENABLE_IPV6 -DMG_ENABLE_SSL -DMG_ENABLE_HTTP_CGI -DMG_ENABLE_HTTP_SSI -DMG_ENABLE_HTTP_SSI_EXEC -DMG_ENABLE_HTTP_WEBDAV -DMG_ENABLE_GETADDRINFO -DMG_ENABLE_HTTP_URL_REWRITES
CFLAGS = -std=c99 @CFLAGS@ @WXBASE_CFLAGS@ -DCBC -DLUA_USE_POSIX -I../../common -I../../../common -I../../../common/lua -I../../../common/lua/src
CXXFLAGS = @CXXFLAGS@ @WXBASE_CXXFLAGS@
CPPFLAGS = @CPPFLAGS@ @WXBASE_CPPFLAGS@ -fno-var-tracking-assignments -I../../common -I../../../common -I../../../common/lua -I../../../common/lua/src
CPPFLAGS += $(MONGOOSE_CFLAGS)

LDFLAGS = @LDFLAGS@
EXTRALIBS = @EXTRALIBS@ 
ifeq ($(STATIC),yes)
EXTRALIBS += @WXBASE_STATIC_LIBS@
else
EXTRALIBS += @WXBASE_LIBS@
endif

STRIP = strip
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_DIR = /usr/bin/install -c -d
srcdir = .
top_srcdir = .
top_builddir =
bindir = ${exec_prefix}/bin
libdir = ${exec_prefix}/lib
datadir = ${prefix}/share
includedir = ${prefix}/include
DLLPREFIX = lib

### Variables: ###

DESTDIR = 
WX_RELEASE = 3.0
LIBDIRNAME = $(top_wxbuilddir)lib

VSCPD_OBJECTS =  vscpd.o \
	../../common/daemonworker.o \
	../../common/clientlist.o \
	../../common/controlobject.o \
	../../common/vscpeventhelper.o \
	../../common/tcpipsrv.o \
	../../common/dm.o \
	../../common/remotevariable.o \
	../../common/interfacelist.o \
	../../common/userlist.o \
	../../common/devicethread.o \
	../../common/websrv.o \
	../../common/restsrv.o \
	../../common/websocketsrv.o \
	../../common/udpsrv.o \
	../../common/multicastsrv.o \
	../../common/tables.o \
	../../common/automation.o \
	../../common/knownnodes.o \
	../../common/duktape_callbacks.o \
	../../common/vscp_javascript.o \
        ../../../common/jsonreader.o \
        ../../../common/jsonwriter.o \
        ../../../common/jsonval.o \
	../../../common/vscpweb.o \
	../../../common/lua/lfs.o \
	../../../common/lua/lsqlite3.o \
	../../../common/lua/LuaXML_lib.o \
	../../../common/lua_all.o

# The following files are built in the local folder to
# prevent a mix between dll linkage and exe linkage
VSCPD_SPECIALS = vscphelper.o \
	vscpremotetcpif.o \
	devicelist.o \
	mdf.o \
	guid.o \
	register.o \
	dllist.o \
	configfile.o \
	crc.o \
	crc8.o \
	randpassword.o \
	frozen.o  \
	duktape.o \
	duk_module_node.o \
	mongoose.o \
	sqlite3.o \
	sqlite3math.o\
	aes.o\
	fastpbkdf2.o\
	vscpmd5.o\
	vscpbase64.o

# Add object files that always should be built here
ALWAYS_BUILD = 

### Targets: ###

all: vscpd 

install: all
	$(STRIP) vscpd
	$(INSTALL_PROGRAM) vscpd $(bindir)

uninstall: 

install-strip: install

clean: 
	rm -rf ./.deps ./.pch
	rm -f *.o
	rm -f ./*.o
	rm -f ../../common/*.o
	rm -f ../../../common/*.o
	rm -f ../../../vscp/common/*.o
	rm -f vscpd

distclean: clean
	rm -f config.cache config.log config.status bk-deps bk-make-pch shared-ld-sh Makefile

vscphelper.o: ../../common/vscphelper.o ../../common/vscphelper.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/vscphelper.cpp -o $@

vscpremotetcpif.o: ../../common/vscpremotetcpif.o ../../common/vscpremotetcpif.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/vscpremotetcpif.cpp -o $@

devicelist.o: ../../common/devicelist.o ../../common/devicelist.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/devicelist.cpp -o $@

guid.o: ../../common/guid.o ../../common/guid.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/guid.cpp -o $@

mdf.o: ../../common/mdf.o ../../common/mdf.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/mdf.cpp -o $@

register.o: ../../common/register.o ../../common/register.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/register.cpp -o $@

configfile.o: ../../../common/configfile.o ../../../common/configfile.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../../common/configfile.cpp -o $@	

dllist.o: ../../../common/dllist.o ../../../common/dllist.h
	$(CC) $(CFLAGS) -c ../../../common/dllist.c  -o $@	

aes.o: ../../../common/aes.o ../../../common/aes.h 
	$(CC) $(CFLAGS) -c ../../../common/aes.c -o $@

crc.o: ../../../common/crc.o ../../../common/crc.h 
	$(CC) $(CFLAGS) -c ../../../common/crc.c -o $@
	
vscpbase64.o: ../../../common/vscpbase64.o ../../../common/vscpbase64.h 
	$(CC) $(CFLAGS) -c ../../../common/vscpbase64.c -o $@	

crc8.o: ../../../common/crc8.o ../../../common/crc8.h
	$(CC) $(CFLAGS) -c ../../../common/crc8.c -o $@

randpassword.o: ../../../common/randpassword.o ../../../common/randpassword.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../../common/randpassword.cpp -o $@

mongoose.o: ../../../common/mongoose.o ../../../common/mongoose.h
	$(CC) $(CFLAGS) $(MONGOOSE_CFLAGS) -c ../../../common/mongoose.c -o $@  

duktape.o: ../../../common/duktape.o ../../../common/duktape.h
	$(CC) $(CFLAGS) -c ../../../common/duktape.c -o $@

duk_module_node.o: ../../../common/duk_module_node.o ../../../common/duk_module_node.h
	$(CC) $(CFLAGS) -c ../../../common/duk_module_node.c -o $@

frozen.o: ../../../common/frozen.o ../../../common/frozen.h
	$(CC) $(CFLAGS) -c ../../../common/frozen.c -o $@

sqlite3.o: ../../../common/sqlite3.o
	$(CC) $(CFLAGS) $(CPPFLAGS) -c  ../../../common/sqlite3.c -o $@

sqlite3math.o: ../../../common/sqlite3math.o
	$(CC) $(CFLAGS) $(CPPFLAGS) -c  ../../../common/sqlite3math.c -o $@

fastpbkdf2.o: ../../../common/fastpbkdf2.o ../../../common/fastpbkdf2.h
	$(CC) $(CFLAGS) -c ../../../common/fastpbkdf2.c -o $@

vscpmd5.o: ../../../common/vscpmd5.o ../../../common/vscpmd5.h
	$(CC) $(CFLAGS) -c ../../../common/vscpmd5.c -o $@	

vscpweb.o: ../../../common/vscpweb.o ../../../common/vscpweb.h
	$(CC) $(CFLAGS) -c ../../../common/vscpweb.c -o $@

lsqlite3.o: ../../../common/lua/lsqlite3.o 
	$(CC) $(CFLAGS) -I../../../common/lua -c ../../../common/lua/lsqlite3.c -o $@

LuaXML_lib.o: ../../../common/lua/LuaXML_lib.o 
	$(CC) (CFLAGS) -I../../../common/lua -c ../../../common/lua/LuaXML_lib.c -o $@

lua_all.o: ../../../common/lua_all.o 
	$(CC) $(CFLAGS) -I../../../common/lua -c ../../../common/lua_all.c -o $@

vscpd: $(VSCPD_OBJECTS) $(VSCPD_SPECIALS) 
	$(CXX) -o $@ $(VSCPD_OBJECTS) $(VSCPD_SPECIALS) $(LDFLAGS) -L$(LIBDIRNAME) $(WXLIBS) $(EXTRALIBS)

$(ALWAYS_BUILD):  .FORCE

.FORCE: 

# Include dependency info, if present:
-include .deps/*.d

.PHONY: all install uninstall clean distclean data .FORCE

