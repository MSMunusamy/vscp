# =========================================================================
#                      Autogenerated from Makefile.in
# =========================================================================

# STATIC = yes if a static build is requested.
STATIC=@STATIC@
VSCP_PROJ_BASE_DIR=@VSCPDIR@

prefix = @prefix@
exec_prefix = @exec_prefix@
INSTALL = @INSTALL@
top_srcdir = @top_srcdir@
top_wxsrcdir = @top_wxsrcdir@
top_builddir = @top_builddir@
top_wxbuilddir = @top_wxbuilddir@

CC = @CC@
CXX = @CXX@

# wxBase flags and libs
WXBASE_CPPFLAGS = @WXBASE_CPPFLAGS@
WXBASE_CXXFLAGS = @WXBASE_CXXFLAGS@
WXBASE_CFLAGS = @WXBASE_CFLAGS@
WXBASE_LIBS = @WXBASE_LIBS@
WXBASE_STATIC_LIBS = @WXBASE_STATIC_LIBS@

# wxGTK flags and libs
WXGTK_CPPFLAGS = @WXGTK_CPPFLAGS@
WXGTK_CXXFLAGS = @WXGTK_CXXFLAGS@
WXGTK_CFLAGS = @WXGTK_CFLAGS@
WXGTK_LIBS = @WXGTK_LIBS@
WXGTK_STATIC_LIBS = @WXGTK_STATIC_LIBS@

# get version from the version file
MAJOR_VERSION = `sed '35!d' ../../common/version.h  | cut -b 33-`
MINOR_VERSION = `sed '36!d' ../../common/version.h  | cut -b 33-`
RELEASE_VERSION = `sed '37!d' ../../common/version.h  | cut -b 33-`
BUILD_VERSION = `sed '38!d' ../../common/version.h  | cut -b 33-

WARNINGS_HARD = -Werror -Wall -Wextra -pedantic -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wlogical-op -Wmissing-include-dirs -Wnoexcept -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-promo -Wstrict-null-sentinel -Wstrict-overflow=5 -Wundef -Wno-unused -Wno-variadic-macros -Wno-parentheses -fdiagnostics-show-option
WARNINGS_MEDIUM = -Wformat-security -Wformat=2

MONGOOSE_CFLAGS = -DMG_ENABLE_THREADS -DMG_ENABLE_IPV6 -DMG_ENABLE_SSL -DMG_ENABLE_HTTP_CGI -DMG_ENABLE_HTTP_SSI -DMG_ENABLE_HTTP_SSI_EXEC -DMG_ENABLE_HTTP_WEBDAV -DMG_ENABLE_GETADDRINFO -DMG_ENABLE_HTTP_URL_REWRITES -DMG_ENABLE_MQTT_BROKER
CFLAGS = -std=c99 @CFLAGS@ @WXBASE_CFLAGS@ -DCBC -DLUA_USE_POSIX -I../../common -I../../../common -I../../../common/lua -I../../../common/lua/src
CXXFLAGS = -std=c++11 @CXXFLAGS@  @WXBASE_CXXFLAGS@
CPPFLAGS = @CPPFLAGS@ @WXBASE_CPPFLAGS@ -fno-var-tracking-assignments -I../../common -I../../../common -I../../../common/lua -I../../../common/lua/src
CPPFLAGS += $(MONGOOSE_CFLAGS)

LDFLAGS = @LDFLAGS@
EXTRALIBS = @EXTRALIBS@
ifeq ($(STATIC),yes)
EXTRALIBS += @WXBASE_STATIC_LIBS@
else
EXTRALIBS += @WXBASE_LIBS@
endif

STRIP = strip
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_DIR = /usr/bin/install -c -d
srcdir = .
top_srcdir = .
top_builddir =
bindir = ${exec_prefix}/bin
libdir = ${exec_prefix}/lib
datadir = ${prefix}/share
includedir = ${prefix}/include
DLLPREFIX = lib

### Variables: ###

DESTDIR =
WX_RELEASE = 3.0
LIBDIRNAME = $(top_wxbuilddir)lib

VSCPD_OBJECTS =  vscpd.o \
	daemonworker.o \
	clientlist.o \
	controlobject.o \
	tcpipsrv.o \
	dm.o \
	remotevariable.o \
	interfacelist.o \
	userlist.o \
	devicethread.o \
	websrv.o \
	restsrv.o \
	websocketsrv.o \
	udpsrv.o \
	multicastsrv.o \
	tables.o \
	automation.o \
	knownnodes.o \
	duktape_vscp_func.o \
	duktape_vscp_wrkthread.o \
	lua_vscp_wrkthread.o\
	lua_vscp_func.o\
	httpd.o \
	vscphelper.o \
	vscpremotetcpif.o \
	devicelist.o \
	mdf.o \
	sockettcp.o \
	guid.o \
	register.o \
	dllist.o \
	configfile.o \
	crc.o \
	crc8.o \
	randpassword.o \
	duktape.o \
	duk_v1_compat.o \
	duk_module_node.o \
	mongoose.o \
	sqlite3.o \
	sqlite3math.o \
	vscp_aes.o \
	fastpbkdf2.o \
	vscpmd5.o \
	vscpbase64.o \
	lfs.o \
	lsqlite3.o \
	LuaXML_lib.o \
	lua_all.o

### Targets: ###

all: vscpd

vscpd.o: vscpd.cpp vscpd.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c vscpd.cpp -o $@

daemonworker.o: ../../common/daemonworker.cpp ../../common/daemonworker.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/daemonworker.cpp -o $@

clientlist.o: ../../common/clientlist.cpp ../../common/clientlist.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/clientlist.cpp -o $@

controlobject.o: ../../common/controlobject.cpp ../../common/controlobject.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/controlobject.cpp -o $@

tcpipsrv.o: ../../common/tcpipsrv.cpp ../../common/tcpipsrv.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/tcpipsrv.cpp -o $@

dm.o: ../../common/dm.cpp ../../common/dm.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/dm.cpp -o $@

remotevariable.o: ../../common/remotevariable.cpp ../../common/remotevariable.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/remotevariable.cpp -o $@

interfacelist.o: ../../common/interfacelist.cpp ../../common/interfacelist.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/interfacelist.cpp -o $@

userlist.o: ../../common/userlist.cpp ../../common/userlist.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/userlist.cpp -o $@

devicethread.o: ../../common/devicethread.cpp ../../common/devicethread.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/devicethread.cpp -o $@

websrv.o: ../../common/websrv.cpp ../../common/websrv.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/websrv.cpp -o $@

restsrv.o: ../../common/restsrv.cpp ../../common/restsrv.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/restsrv.cpp -o $@

websocketsrv.o: ../../common/websocketsrv.cpp ../../common/websocket.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/websocketsrv.cpp -o $@

udpsrv.o: ../../common/udpsrv.cpp ../../common/udpsrv.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/udpsrv.cpp -o $@

multicastsrv.o: ../../common/multicastsrv.cpp ../../common/multicastsrv.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/multicastsrv.cpp -o $@

mqttbroker.o: ../../common/mqttbroker.cpp ../../common/mqttbroker.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(MONGOOSE_CFLAGS) -c ../../common/mqttbroker.cpp -o $@

tables.o: ../../common/tables.cpp ../../common/tables.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/tables.cpp -o $@

automation.o: ../../common/automation.cpp ../../common/automation.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/automation.cpp -o $@

knownnodes.o: ../../common/knownnodes.cpp ../../common/knownnodes.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/knownnodes.cpp -o $@

duktape_vscp_func.o: ../../common/duktape_vscp_func.cpp ../../common/duktape_vscp_func.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/duktape_vscp_func.cpp -o $@

duktape_vscp_wrkthread.o: ../../common/duktape_vscp_wrkthread.cpp ../../common/duktape_vscp_wrkthread.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/duktape_vscp_wrkthread.cpp -o $@

lua_vscp_func.o: ../../common/lua_vscp_func.cpp ../../common/lua_vscp_func.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/lua_vscp_func.cpp -o $@

lua_vscp_wrkthread.o: ../../common/lua_vscp_wrkthread.cpp ../../common/lua_vscp_wrkthread.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/lua_vscp_wrkthread.cpp -o $@	

vscphelper.o: ../../common/vscphelper.cpp ../../common/vscphelper.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/vscphelper.cpp -o $@

vscpremotetcpif.o: ../../common/vscpremotetcpif.cpp ../../common/vscpremotetcpif.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/vscpremotetcpif.cpp -o $@

devicelist.o: ../../common/devicelist.cpp ../../common/devicelist.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/devicelist.cpp -o $@

sockettcp.o: ../../../common/sockettcp.c ../../../common/sockettcp.h
	$(CC) $(CFLAGS) -c ../../../common/sockettcp.c -o $@

guid.o: ../../common/guid.cpp ../../common/guid.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/guid.cpp -o $@

mdf.o: ../../common/mdf.cpp ../../common/mdf.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/mdf.cpp -o $@

register.o: ../../common/register.cpp ../../common/register.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../common/register.cpp -o $@

configfile.o: ../../../common/configfile.cpp ../../../common/configfile.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../../common/configfile.cpp -o $@

dllist.o: ../../../common/dllist.c ../../../common/dllist.h
	$(CC) $(CFLAGS) -c ../../../common/dllist.c  -o $@

vscp_aes.o: ../../../common/vscp_aes.c ../../../common/vscp_aes.h
	$(CC) $(CFLAGS) -c ../../../common/vscp_aes.c -o $@

crc.o: ../../../common/crc.c ../../../common/crc.h
	$(CC) $(CFLAGS) -c ../../../common/crc.c -o $@

vscpbase64.o: ../../../common/vscpbase64.c ../../../common/vscpbase64.h
	$(CC) $(CFLAGS) -c ../../../common/vscpbase64.c -o $@

crc8.o: ../../../common/crc8.c ../../../common/crc8.h
	$(CC) $(CFLAGS) -c ../../../common/crc8.c -o $@

randpassword.o: ../../../common/randpassword.cpp ../../../common/randpassword.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../../../common/randpassword.cpp -o $@

mongoose.o: ../../../common/mongoose.c ../../../common/mongoose.h
	$(CC) $(CFLAGS) $(MONGOOSE_CFLAGS) -c ../../../common/mongoose.c -o $@

duktape.o: ../../../common/duktape.c ../../../common/duktape.h
	$(CC) $(CFLAGS) -c ../../../common/duktape.c -o $@

duk_v1_compat.o: ../../../common/duk_v1_compat.c ../../../common/duk_v1_compat.h
	$(CC) $(CFLAGS) -c ../../../common/duk_v1_compat.c -o $@

duk_module_node.o: ../../../common/duk_module_node.c ../../../common/duk_module_node.h
	$(CC) $(CFLAGS) -c ../../../common/duk_module_node.c -o $@

sqlite3.o: ../../../common/sqlite3.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c  ../../../common/sqlite3.c -o $@

sqlite3math.o: ../../../common/sqlite3math.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c  ../../../common/sqlite3math.c -o $@

fastpbkdf2.o: ../../../common/fastpbkdf2.c ../../../common/fastpbkdf2.h
	$(CC) $(CFLAGS) -c ../../../common/fastpbkdf2.c -o $@

vscpmd5.o: ../../../common/vscpmd5.c ../../../common/vscpmd5.h
	$(CC) $(CFLAGS) -c ../../../common/vscpmd5.c -o $@

httpd.o: ../../../common/httpd.c ../../../common/httpd.h
	$(CC) $(CFLAGS) -c ../../../common/httpd.c -o $@

lsqlite3.o: ../../../common/lua/lsqlite3.c
	$(CC) $(CFLAGS) -I../../../common/lua -c ../../../common/lua/lsqlite3.c -o $@

lfs.o: ../../../common/lua/lfs.c
	$(CC) $(CFLAGS) -I../../../common/lua -c ../../../common/lua/lfs.c -o $@

LuaXML_lib.o: ../../../common/lua/LuaXML_lib.c
	$(CC) $(CFLAGS) -I../../../common/lua -c ../../../common/lua/LuaXML_lib.c -o $@

lua_all.o: ../../../common/lua_all.c
	$(CC) $(CFLAGS) -I../../../common/lua -c ../../../common/lua_all.c -o $@

vscpd: $(VSCPD_OBJECTS)
	$(CXX) -o $@ $(VSCPD_OBJECTS) $(LDFLAGS) -L$(LIBDIRNAME) $(WXLIBS) $(EXTRALIBS)

# Used by checkinstall
debinst: all
	$(STRIP) vscpd
	$(INSTALL_PROGRAM) vscpd /usr/bin
	@mkdir -p @VSCPDIR@
	@mkdir -p @VSCPDIR@/tmp
	@$(INSTALL_PROGRAM) -b ../../../../config_examples/vscpd.startup_script_debian_debinst @VSCPDIR@/tmp/vscpd.startup_script_debian_debinst
	@$(INSTALL_PROGRAM) -b ../../../../config_examples/vscpd.conf_unix_distro @VSCPDIR@/tmp/vscpd.conf_unix_distro
	@$(INSTALL_PROGRAM) -b ../../../../config_examples/variables.xml_distro @VSCPDIR@/tmp/variables.xml_distro
	@$(INSTALL_PROGRAM) -b ../../../../config_examples/dm.xml_distro @VSCPDIR@/tmp/dm.xml_distro
	@$(INSTALL_PROGRAM) -b ../../../../config_examples/simulation/simtempdata.txt @VSCPDIR@/tmp/simtempdata.txt
	@$(INSTALL_PROGRAM) -b ../../../../config_examples/certs/server.pem @VSCPDIR@/tmp/server.pem
	@$(INSTALL_PROGRAM) -b ../../../../config_examples/certs/client.pem @VSCPDIR@/tmp/client.pem

install: all
	$(STRIP) vscpd
	$(INSTALL_PROGRAM) vscpd $(bindir)
	# create folder structure
	@mkdir -p @VSCPDIR@
	@mkdir -p @VSCPDIR@/logs
	@mkdir -p @VSCPDIR@/actions
	@mkdir -p @VSCPDIR@/scripts
	@mkdir -p @VSCPDIR@/scripts/javascript
	@mkdir -p @VSCPDIR@/scripts/lua
	@mkdir -p @VSCPDIR@/ux
	@mkdir -p @VSCPDIR@/web
	@mkdir -p @VSCPDIR@/certs
	@mkdir -p @VSCPDIR@/drivers
	@mkdir -p @VSCPDIR@/drivers/level1
	@mkdir -p @VSCPDIR@/drivers/level2
	@mkdir -p @VSCPDIR@/upload
	@mkdir -p @VSCPDIR@/web/css
	@mkdir -p @VSCPDIR@/web/images
	@mkdir -p @VSCPDIR@/web/lib
	@mkdir -p @VSCPDIR@/web/testws
	@mkdir -p @VSCPDIR@/vscp
	@mkdir -p @VSCPDIR@/tables
	@mkdir -p @VSCPDIR@/mdf
	@mkdir -p @VSCPDIR@/tmp

	# startup script
	@if [ ! -e /etc/init.d/vscpd ]; then\
	    $(INSTALL_PROGRAM) -b -m755 ../../../../config_examples/vscpd.startup_script_debian /etc/init.d/vscpd;\
	    update-rc.d vscpd defaults;\
	fi

	# main configuration file
	@mkdir -p /etc/vscp
	@if [ ! -e /etc/vscp/vscpd.conf ]; then\
	    $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/vscpd.conf_unix_distro /etc/vscp/vscpd.conf;\
	else\
	    $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/vscpd.conf_unix_distro /etc/vscp/vscpd.conf.`date +'%Y%m%d'`;\
	fi

	# Example variables
	@if [ ! -e @VSCPDIR@/variables.xml ]; then\
	    $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/variables.xml_distro @VSCPDIR@/variables.xml;\
	else\
	    $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/variables.xml_distro @VSCPDIR@/variables.xml.`date +'%Y%m%d'`;\
	fi

	# Example DM
	@if [ ! -e @VSCPDIR@/dm.xml ]; then\
	    $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/dm.xml_distro @VSCPDIR@/dm.xml;\
	else\
	    $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/dm.xml_distro @VSCPDIR@/dm.xml.`date +'%Y%m%d'`;\
	fi

	# Sample data for simulation
	@if [ ! -e @VSCPDIR@/simtempdata.txt ]; then\
	    $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/simulation/simtempdata.txt @VSCPDIR@/simtempdata.txt;\
	else\
	    $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/simulation/simtempdata.txt @VSCPDIR@/simtempdata.txt.`date +'%Y%m%d'`;\
	fi

	# Server sample certificat
	@if [ ! -e @VSCPDIR@/certs/server.pem ]; then\
            $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/certs/server.pem @VSCPDIR@/certs;\
	fi

	# Client sample certificat
	@if [ ! -e @VSCPDIR@/certs/client.pem ]; then\
	    $(INSTALL_PROGRAM) -b -m744 ../../../../config_examples/certs/client.pem @VSCPDIR@/certs;\
	fi

uninstall:

install-strip: install

deb:    all
	echo "\n" | ./builddist.sh
	@mkdir -p ../../../../dist
	@mv *.deb ../../../../dist

clean:
	rm -rf ./.deps ./.pch
	rm -f *.o
	rm -f ./*.o
	rm -f ../../common/*.o
	rm -f ../../../common/*.o
	rm -f ../../../vscp/common/*.o
	rm -f *.deb
	rm -f *.gz
	rm -f vscpd

distclean: clean
	rm -f config.cache config.log config.status bk-deps bk-make-pch shared-ld-sh Makefile

$(ALWAYS_BUILD):  .FORCE

.FORCE:

# Include dependency info, if present:
-include .deps/*.d

.PHONY: all install uninstall clean distclean data .FORCE
