<?xml version = "1.0" encoding = "UTF-8" ?>

<!--
  2019-11-10
  Example configuration file Unix
  Ake Hedman, akhe@vscp.org
  http://www.grodansparadis.com
  Documentation for this configuration file is available
  here https://grodansparadis.gitbooks.io/the-vscp-daemon/configuring_the_vscp_daemon.html

  All settings in this configuration file except enteries in the general section,
  can be done in the configuration database as well. This allows for easier
  configuration using the built in administration user interface
  (http(s)://localhost:port/vscp).
-->

<vscpconfig>

    <!--
      The general section is read before the configuration from the
      database is read.
    -->
    <general>

        <!--
          This is the admin credentials
          allowfrom="" allow connections from all hosts. Can be for
          a comma separated lite like "-0.0.0.0/0,+192.168/16" where
          a "+"" before a net is allowed and "-" ins disallowed.
          The VSCP token is used a a key for encryption routines
        -->
        <security admin="admin"
            password="450ADCE88F2FDBB20F3318B65E53CA4A;06D3311CC2195E80BE4F8EB12931BFEB5C630F6B154B2D644ABE29CEBDBFB545"
            allowfrom=""
            vscptoken="Carpe diem quam minimum credula postero"
            vscpkey="A4A86F7D7E119BA3F0CD06881E371B989B33B6D606A863B633EF529D64544F8E"
        />

        <logging  debugflags0="0"
                debugflags1="0"
                debugflags2="0"
                debugflags3="0"
                debugflags4="0"
                debugflags5="0"
                debugflags6="0"
                debugflags7="0"
                debugflags8="0" />

        <!-- The user to run as  -->
        <runasuser></runasuser>

        <!--
          Set GUID for daemon
          All nills, "-" or not set and the mac addess or the
          IP address of the computer will be used to calculate
          the GUID for the daemon
          Apply for your own GUID series at guid@vscp.org
        -->
        <guid>
            00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00
        </guid>

        <!-- Set symbolic server name for daemon -->
        <servername>The VSCP Daemon</servername>

        <!--
          This is the default buffer size (number of events) for all
          clients in the system. Everything from a driver to a TCP/IP
          user is regarded as a client. Default is 1024.
        -->

        <clientbuffersize>1024</clientbuffersize>

    </general>


    <!--
        You can open TCP/IP interfaces on several ports or on
        on a specific port or on every interface of the computer
        Default 9598 will listen on all interfaces while
        "127.0.0.1:9598" only will listen on the specified interface.
        To specify several interfaces just enter them with a space
        between them.
        Documented here https://grodansparadis.gitbooks.io/the-vscp-daemon/configuring_the_vscp_daemon.html#tcpip-client-interface
    -->
    <tcpip enable="true"
        interface="9598" />

    <!--
      Settings for the internal webserver.

      Documented here
      https://grodansparadis.gitbooks.io/the-vscp-daemon/configuring_the_vscp_daemon.html#webserver
    -->

    <webserver enable="true"
        document_root="/srv/vscp/web"
        listening_ports="[::]:9999r,[::]:8843s,8884"
        index_files="index.xhtml,index.html,index.htm,index.lp,index.lsp,index.lua,index.cgi,index.shtml,index.php"
        authentication_domain="mydomain.com"
        enable_auth_domain_check="false"
        ssl_certificate="/srv/vscp/certs/server.pem"
        ssl_certificate_chain=""
        ssl_verify_peer="false"
        ssl_ca_path=""
        ssl_ca_file=""
        ssl_verify_depth="9"
        ssl_default_verify_paths="true"
        ssl_cipher_list="DES-CBC3-SHA:AES128-SHA:AES128-GCM-SHA256"
        ssl_protocol_version="3"
        ssl_short_trust="false"
        cgi_interpreter=""
        cgi_patterns="**.cgi$|**.pl$|**.php|**.py"
        cgi_environment=""
        protect_uri=""
        trottle=""
        enable_directory_listing="true"
        enable_keep_alive="false"
        keep_alive_timeout_ms="0"
        access_control_list=""
        extra_mime_types=""
        num_threads="50"
        run_as_user=""
        url_rewrite_patterns=""
        hilde_file_patterns=""
        request_timeout_ms="10000"
        linger_timeout_ms=""
        decode_url="true"
        global_auth_file=""
        per_directory_auth_file=""
        ssi_patterns=""
        access_control_allow_origin="*"
        access_control_allow_methods="*"
        access_control_allow_headers="*"
        error_pages=""
        tcp_nodelay="0"
        static_file_max_age="3600"
        strict_transport_security_max_age=""
        allow_sendfile_call="true"
        additional_header=""
        max_request_size="16384"
        allow_index_script_resource="false"
        duktape_script_patterns="**.ssjs$"
        lua_preload_file=""
        lua_script_patterns="**.lua$"
        lua_server_page_patterns="**.lp$|**.lsp$"
        lua_websocket_patterns="**.lua$"
        lua_background_script=""
        lua_background_script_params="" />

    <!--
      Enable disable the websocket interface.
      Id auth is set to false not authentication will be done
    -->
    <websockets enable="true" />

    <!--
      Holds information about one (at least) or more users
      Use mkpassword to generate a new password
      Privilege is "admin" or "user" or comma seperated list
      Same information is used for accessing the daemon
      through the TCP/IP interface as through the web-interface
      allowfrom is a comma separated list of allowed remotes,
    -->
    <remoteuser>
        <user
            name="user"
            password="D35967DEE4CFFB214124DFEEA7778BB0;582BCA078604C925852CDDEE0A8475556DEAA6DC6EFB004A353094900C97D3DE"
            privilege="user"
            allowfrom="" />
    </remoteuser>


    <!-- List level I/CANAL drivers here -->
    <level1driver enable="true" >

        <!-- The canallog driver -->
        <driver enable="false"
            name="logger"
            config="/tmp/canallog.txt"
            path="/usr/lib/vscpl1drv-logger.so"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:00:00:00:00:00:01:00:00"
            flags="1" />

        <!-- The can4vscp driver -->
        <driver enable="false"
            name="can4vscp"
            config="/dev/ttyS0"
            path="/usr/lib/vscpl1drv-can4vscp.so"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:00:00:00:00:00:02:00:00"
            flags="0" />

        <!--
            The Level I socketcan driver (You may concider using the
            Level II version instead)
        -->
        <driver enable="false"
            name="socketcanl1"
            config="vcan0"
            path="/usr/lib/vscpl1drv-socketcan.so"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:00:00:00:00:00:03:00:00"
            flags="0" />

        <!-- The can232 driver -->
        <driver enable="false"
            name="can232"
            config="/dev/ttyS0;19200;0;0;125"
            path="/usr/lib/vscpl1drv-can232.so"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:00:00:00:00:00:04:00:00"
            flags="0" />

        <!-- The xap driver -->
        <driver enable="false"
            name="xap"
            config="9598;3639"
            path="/usr/lib/vscpl1drv-xap.so"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:00:00:00:00:00:05:00:00"
            flags="0" />

    </level1driver>

    <!-- List level II VSCP drivers here -->
    <level2driver enable="true">

        <!-- Level II Logger -->
        <driver enable="false"
            name="Level II Logger"
            path-driver="/usr/lib/vscpl2drv-logger.so"
             path-config="/var/lib/vscp/vscpl2drv-logger/config.xml"
             guid="FF:FF:FF:FF:FF:FF:FF:FC:10:00:00:00:00:00:00:01" />

        <!-- Level II lmsensors -->
        <driver enable="false"
            name="LM-sensors"
            path-driver="/usr/lib/vscpl2drv-lmsensors.so"
            path-config="/var/lib/vscp/vscpl2drv-lmsensors/config.xml"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:10:00:00:00:00:00:00:02" />

        <!-- Level II socketcan  -->
        <driver enable="false"
            name="SocketCAN"
            path-driver="/usr/lib/vscpl2drv-socketcan.so"
            path-config="/var/lib/vscp/vscpl2drv-socketcan/config.xml"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:10:00:00:00:00:00:00:03" />

        <!-- Level II mqtt -->
        <driver enable="false"
            name="MQTT"
            path-driver="/usr/lib/vscpl2drv-mqtt.so"
            path-config="/var/lib/vscp/vscpl2drv-mqtt/config.xml"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:10:00:00:00:00:00:00:04" />

        <!-- Level II tcp/ip link -->
        <driver enable="false"
            name="tcpiplink"
            path-driver="/usr/lib/vscpl2drv-tcpiplink.so"
            path-config="/var/lib/vscp/vscpl2drv-tcpiplink/config.xml"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:10:00:00:00:00:00:00:05" />

        <!-- Level II raw ethernet -->
        <driver enable="false"
            name="RawEthernet"
            path-driver="/usr/lib/vscpl2drv-raweth.so"
            path-config="/var/lib/vscp/vscpl2drv-raweth/config.xml"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:10:00:00:00:00:00:00:06" />

       <!-- Level II simulation -->
        <driver enable="false"
            name="sim"
            path-driver="/usr/lib/vscpl2drv-sim.so"
            path-config="/var/lib/vscp/vscpl2drv-sim/config.xml"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:10:00:00:00:00:00:00:07" />

        <!-- Level II 1-wire driver -->
        <driver enable="false"
            name="1-wire"
            path-driver="/usr/lib/vscpl2drv-wire1.so"
            path-config="/var/lib/vscp/vscpl2drv-wire1/config.xml"
            guid="FF:FF:FF:FF:FF:FF:FF:FC:10:00:00:00:00:00:00:08" />

    </level2driver>

</vscpconfig>
